{"version":3,"sources":["components/Spinner.tsx","components/Button.tsx","components/Error.tsx","components/Checkbox.tsx","components/Input.tsx","components/Select.tsx","components/Sex.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["Spinner","className","Button","status","spinnerStatus","toggleClass","type","disabled","value","Error","errorText","Checkbox","onUpdate","useState","isWrong","setWrong","cancelSumbit","e","preventDefault","onChange","onBlur","target","checked","href","onClick","Input","elemType","placeHolder","name","isEmpty","isLatin","minLengthError","emailError","inputType","placeholder","autoComplete","Select","toggle","setToggle","toggleHandler","prev","iconClass","countryHandler","newCountry","defaultValue","readOnly","map","country","index","key","tabIndex","Sex","toLowerCase","useInput","initialValue","validations","setValue","valid","setEmpty","setMinLengthError","setLatin","setEmailError","setErrorText","useEffect","validation","length","test","String","useValidation","wrongHandler","Form","buttonStatus","setButtonStatus","email","password","sex","setChecked","setSpinnerStatus","onSubmit","event","setTimeout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uWAMeA,EAJC,WACZ,OAAQ,yBAAKC,UAAU,WAAU,8BAAW,8BAAW,8BAAW,gCCoBvDC,EAjBmC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cACrDC,GAAyB,IAAXF,EAAmB,SAAW,WAClD,OACE,yBAAKF,UAAU,iBACb,2BACEK,KAAK,SACLL,UAAS,sBAAiBI,GAC1BE,SAAUJ,EACVK,MAAM,KAENJ,EAA+D,kBAAC,EAAD,MAA/C,0BAAMH,UAAU,eAAhB,aCVTQ,EAFkB,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAF,OAAkB,yBAAKT,UAAU,SAASS,IC8B5DC,EA3BwB,SAAC,GAAuB,IAAtBH,EAAqB,EAArBA,MAAOI,EAAc,EAAdA,SAAc,EAC9BC,oBAAS,GADqB,mBACnDC,EADmD,KAC1CC,EAD0C,KAEpDC,EAAe,SAACC,GACpBA,EAAEC,kBAEN,OACE,yBAAKjB,UAAU,iBACb,+BACE,2BACEK,KAAK,WACLa,SAAU,SAACF,GAAD,OAA4CL,EAASK,IAC/DG,OAAQ,SAACH,GACAA,EAAEI,OAAOC,SACZP,GAAS,IAGfO,QAASd,IAEX,qCACS,uBAAGe,KAAK,IAAIC,QAAS,SAAAP,GAAC,OAAID,EAAaC,KAAvC,SADT,QACkE,uBAAGM,KAAK,IAAIC,QAAS,SAAAP,GAAC,OAAID,EAAaC,KAAvC,gBAGnEH,KAAYA,IAAWN,GAAkB,kBAAC,EAAD,CAAOE,UAAU,mCCUhDe,EArBmC,SAAC,GAA0H,IAEtJC,EAF6BpB,EAAwH,EAAxHA,KAAYqB,GAA4G,EAAlHC,KAAkH,EAA5GD,aAAanB,EAA+F,EAA/FA,MAAOW,EAAwF,EAAxFA,SAAUC,EAA8E,EAA9EA,OAAQS,EAAsE,EAAtEA,QAASf,EAA6D,EAA7DA,QAASJ,EAAoD,EAApDA,UAAWoB,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,WAOpJC,EAAqB,UAAT3B,EAAmB,QAAmB,aAATA,EAAsB,WAAa,OAElF,OACI,yBAAKL,UAAU,mBAPU,WADRyB,EASApB,GARkB,yBAAKL,UAAU,eAAmC,aAAbyB,EAAyB,yBAAKzB,UAAU,kBAAyB,KASrI,2BAAO2B,KAAMtB,EAAML,UAAS,gBAAWK,GAAQE,MAAOA,EAAOW,SAAUA,EAAUC,OAAQA,EAAQd,KAAM2B,EAAWC,YAAaP,EAAaQ,aAAa,QACvJrB,GAAWe,GAAY,kBAAC,EAAD,CAAOnB,UAAWA,IACzCI,GAAkB,SAAPR,IAAkBuB,IAAYC,GAAY,kBAAC,EAAD,CAAOpB,UAAWA,IACvEI,GAAkB,UAAPR,IAAmBuB,GAAWG,GAAgB,kBAAC,EAAD,CAAOtB,UAAWA,IAC3EI,GAAkB,aAAPR,IAAsBuB,GAAWE,GAAmB,kBAAC,EAAD,CAAOrB,UAAWA,MC4BhF0B,EAlDmC,SAAC,GAO5C,IANLT,EAMI,EANJA,YACAnB,EAKI,EALJA,MACAgB,EAII,EAJJA,QACAV,EAGI,EAHJA,QACFe,EAEM,EAFNA,QACCT,EACK,EADLA,OACK,EAEwBP,oBAAS,GAFjC,mBAEGwB,EAFH,KAEWC,EAFX,KAIEC,EAAgB,WACpBD,GAAU,SAACE,GAAD,OAAWA,MAEjBC,EAAYJ,EAAS,SAAW,SAEhCK,EAAiB,SAACC,GACtBnB,EAAQmB,GACRJ,KAGF,OACE,yBAAKtC,UAAU,oBACb,2BACEA,UAAU,SACViC,YAAaP,EACbiB,aAAcpC,EACdqC,UAAQ,EACRrB,QAASe,EACTnB,OAAQA,IAETiB,EACC,yBAAKpC,UAAU,eAxBC,CAAC,SAAU,UAAW,UAAW,UAAW,SAyB3C6C,KAAI,SAACC,EAASC,GAAV,OACjB,yBACE/C,UAAU,gBACVgD,IAAKD,EACLxB,QAAS,kBAAMkB,EAAeK,KAE7BA,OAIL,KACJ,yBAAK9C,UAAS,eAAUwC,EAAV,KAAwBjB,QAASe,EAAeW,SAAU,EAAG9B,OAAQA,IACjFN,GAAWe,GAAa,kBAAC,EAAD,CAAOnB,UAAU,mCCnClCyC,EAfc,SAAC,GAAyB,IAAtBvB,EAAqB,EAArBA,KAAMT,EAAe,EAAfA,SACnC,OACA,yBAAKlB,UAAS,mBAAc2B,EAAKwB,gBAC7B,+BACI,2BACI9C,KAAK,QACLE,MAAK,UAAKoB,GACVA,KAAK,MACLT,SAAUA,IAEjBS,KCiDHyB,EAAW,SAACC,EAA0BC,GAAsB,IAAD,EACrC1C,mBAASyC,GAD4B,mBACxD9C,EADwD,KACjDgD,EADiD,OAEnC3C,oBAAS,GAF0B,mBAExDC,EAFwD,KAE/CC,EAF+C,KAGzD0C,EA5Dc,SAACjD,EAAgB+C,GAAsB,IAAD,EAC9B1C,oBAAS,GADqB,mBACnDgB,EADmD,KAC1C6B,EAD0C,OAEd7C,oBAAS,GAFK,mBAEnDkB,EAFmD,KAEnC4B,EAFmC,OAG9B9C,oBAAS,GAHqB,mBAGnDiB,EAHmD,KAG1C8B,EAH0C,OAItB/C,oBAAS,GAJa,mBAInDmB,EAJmD,KAIvC6B,EAJuC,OAKxBhD,mBAAS,IALe,mBAKnDH,EALmD,KAKxCoD,EALwC,KA+C1D,OAzCAC,qBAAU,WACR,IAAK,IAAMC,KAAcT,EACvB,OAAQS,GACN,IAAK,UACGxD,EACFkD,GAAS,IAETA,GAAS,GACTI,EAAa,uIAEf,MACJ,IAAK,YACGtD,EAAMyD,OAASV,EAAYS,IAC7BL,GAAkB,GAClBG,EAAa,6CAEbH,GAAkB,GAEpB,MACJ,IAAK,UACqB,cACJO,KAAK1D,GACrBoD,GAAS,IAETA,GAAS,GACTE,EAAa,8BAEf,MACJ,IAAK,UACkB,wJACJI,KAAKC,OAAO3D,GAAO4C,eAChCS,GAAc,IAEdA,GAAc,GACdC,EAAa,0CAMtB,CAACP,EAAa/C,IACV,CACLE,YACAmB,UACAE,iBACAD,UACAE,cAQYoC,CAAc5D,EAAO+C,GAanC,OAAO,aACL/C,QACAgD,WACArC,SAfe,SAACF,GAChBuC,EAASvC,EAAEI,OAAOb,QAelBY,OAba,SAACH,GACdF,GAAS,IAaTS,QAXc,SAACmB,GACfa,EAASb,IAWT7B,UACAuD,aAVmB,WACnBtD,GAAS,KAUN0C,IAqEQa,EAlEF,WAAO,IAAD,EACuBzD,oBAAS,GADhC,mBACV0D,EADU,KACIC,EADJ,KAGX5C,EAAOyB,EAAS,GAAI,CAAC,SAAW,EAAM,SAAY,IAClDoB,EAAQpB,EAAS,GAAI,CAAC,SAAW,EAAM,SAAW,IAClDqB,EAAWrB,EAAS,GAAI,CAAC,SAAW,EAAM,UAAa,IACvDN,EAAUM,EAAS,GAAI,CAAC,SAAW,IACnCsB,EAAMtB,EAAS,GAAI,CAAC,SAAW,IAPpB,EAQaxC,oBAAS,GARtB,mBAQVS,EARU,KAQDsD,EARC,OASyB/D,oBAAS,GATlC,mBASVT,EATU,KASKyE,EATL,KA+CjB,OAnBAd,qBAAU,WAEAnC,EAAKC,SAAY4C,EAAM5C,SAAY6C,EAAS7C,SAAYkB,EAAQlB,SAAY8C,EAAI9C,UAAWP,IAC9FM,EAAKE,SAAY2C,EAAMzC,YAAe0C,EAAS3C,eAG9CyC,GAAgB,GAFhBA,GAAgB,KAOrB,CAAC5C,EAAM6C,EAAOC,EAAU3B,EAAS4B,EAAKrD,IAEzCyC,qBAAU,WACJzC,GAAWqD,EAAI9C,SACjB8C,EAAIN,iBAEL,CAAC/C,EAASqD,IAGX,yBAAK1E,UAAU,QACb,yBAAKA,UAAU,cAAf,wBACA,0BAAM6E,SA7BY,SAACC,GACrBA,EAAM7D,iBANN2D,GAAiB,SAAArC,GAAI,OAAKA,KAC1BwC,YAAW,WACTH,GAAiB,KAChB,OAgCC,kBAAC,EAAD,eAAOvE,KAAK,OAAOsB,KAAK,OAAOD,YAAY,mBAAsBC,IACjE,kBAAC,EAAD,eAAOtB,KAAK,QAAQsB,KAAK,QAAQD,YAAY,SAAY8C,IACzD,kBAAC,EAAD,eAAOnE,KAAK,WAAWsB,KAAK,WAAWD,YAAY,YAAe+C,IAClE,kBAAC,EAAD,eAAQ/C,YAAY,uBAA0BoB,IAC9C,yBAAK9C,UAAU,YACZ,kBAAC,EAAD,eAAK2B,KAAK,QAAW+C,IACrB,kBAAC,EAAD,eAAK/C,KAAK,UAAa+C,IACrBA,EAAI7D,SAAW6D,EAAI9C,SAAa,kBAAC,EAAD,CAAOnB,UAAU,gCAEtD,kBAAC,EAAD,CAAUF,MAAOc,EAASV,SAhDR,SAACK,GACvB2D,EAAW3D,EAAEI,OAAOC,YAgDhB,kBAAC,EAAD,CAAQnB,OAAQoE,EAAcnE,cAAeA,O,sDCvItC6E,MANf,WACE,OAAO,6BACL,kBAAC,EAAD,QCXJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f06aef10.chunk.js","sourcesContent":["import React from 'react'  \r\n\r\nconst Spinner = () => {\r\n    return (<div className=\"spinner\"><div></div><div></div><div></div><div></div></div>)\r\n}\r\n\r\nexport default Spinner","import React from \"react\";\r\nimport Spinner from \"./Spinner\";\r\ninterface ButtonEl {\r\n  status: boolean;\r\n  spinnerStatus: boolean\r\n}\r\nconst Button: React.FunctionComponent<ButtonEl> = ({ status, spinnerStatus }) => {\r\n  const toggleClass = status === false ? \"active\" : \"inactive\";\r\n  return (\r\n    <div className=\"submit_button\">\r\n      <input\r\n        type=\"submit\"\r\n        className={`form_button ${toggleClass}`}\r\n        disabled={status}\r\n        value=\"\"\r\n      ></input>\r\n      {!spinnerStatus ? <span className=\"submit_text\">Sign up</span>:  <Spinner />}\r\n      \r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react'\r\ninterface ErrorEl {\r\n    errorText: string\r\n}\r\nconst Error: React.FC<ErrorEl> = ({errorText}) => (<div className=\"error\">{errorText}</div>)\r\n\r\nexport default Error;","import React, {useState} from \"react\";\r\nimport Error from \"./Error\"\r\n\r\ninterface CheckboxEl {\r\n        value: boolean,\r\n        onUpdate: ((event: React.ChangeEvent<HTMLInputElement>) => void),\r\n    }\r\nconst Checkbox: React.FC<CheckboxEl> = ({value, onUpdate}) => {\r\n    const [isWrong, setWrong] = useState(false);\r\n    const cancelSumbit = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n      e.preventDefault()\r\n    }\r\n  return (\r\n    <div className=\"form_checkbox\">\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => onUpdate(e)}\r\n          onBlur={(e) => {\r\n              if (!e.target.checked) {\r\n                setWrong(true)\r\n              }\r\n          }}\r\n          checked={value}\r\n        />\r\n        <p>\r\n          Accept <a href=\"/\" onClick={e => cancelSumbit(e)}>terms</a> and <a href=\"/\" onClick={e => cancelSumbit(e)}>conditions</a>\r\n        </p>\r\n      </label>\r\n      {isWrong && (isWrong ? !value: false ) && <Error errorText=\"You must accept the policies\"/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox\r\n","import React from \"react\";\r\nimport Error from \"./Error\"\r\n\r\ninterface InputEl {\r\n  type: string,\r\n  name: string,\r\n  placeHolder: string,\r\n  value: string,\r\n  onChange: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined,\r\n  onBlur: ((event: React.FocusEvent<HTMLInputElement>) => void) | undefined, \r\n  isWrong: boolean,\r\n  isEmpty: boolean,\r\n  errorText: string,\r\n  isLatin: boolean,\r\n  minLengthError: boolean,\r\n  emailError: boolean\r\n};\r\n\r\n    const Input: React.FunctionComponent<InputEl> = ({type, name, placeHolder, value, onChange, onBlur, isEmpty, isWrong, errorText, isLatin, minLengthError, emailError}) => {\r\n\r\n    const setIconElem = (elemType: string) => {\r\n        const div = elemType === \"email\" ? <div className=\"icon email\"></div> : elemType === \"password\" ?<div className=\"icon password\"></div> : null   \r\n        return div;\r\n    }\r\n    \r\n    const inputType = type === \"email\" ? \"email\" : type === \"password\" ? \"password\" : \"text\";\r\n\r\n    return (\r\n        <div className=\"input_container\">\r\n            {setIconElem(type)}\r\n            <input name={type} className={`input ${type}`} value={value} onChange={onChange} onBlur={onBlur} type={inputType} placeholder={placeHolder} autoComplete=\"off\"></input>\r\n            {(isWrong && isEmpty) && <Error errorText={errorText}/>}\r\n            {(isWrong && type===\"name\" && !isEmpty && !isLatin) && <Error errorText={errorText}/>}\r\n            {(isWrong && type===\"email\" && !isEmpty && emailError ) && <Error errorText={errorText}/>}\r\n            {(isWrong && type===\"password\" && !isEmpty && minLengthError) && <Error errorText={errorText}/>}\r\n        </div>\r\n      );\r\n  };\r\n  \r\n  export default Input;\r\n  \r\n\r\n","import React, { useState } from \"react\";\r\nimport Error from \"./Error\"\r\n\r\ninterface SelectEl {\r\n  placeHolder: string;\r\n  value: string;\r\n  onBlur: ((event: React.FocusEvent<HTMLInputElement>) => void) | undefined;\r\n  onClick: (arg0: string) => void | undefined;\r\n  isWrong: boolean;\r\n  isEmpty: boolean;\r\n\r\n}\r\nconst Select: React.FunctionComponent<SelectEl> = ({\r\n  placeHolder,\r\n  value,\r\n  onClick,\r\n  isWrong,\r\nisEmpty\r\n,onBlur\r\n}) => {\r\n  const countriesList = [\"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\"];\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const toggleHandler = () => {\r\n    setToggle((prev) => !prev);\r\n  };\r\n  const iconClass = toggle ? \"opened\" : \"closed\";\r\n\r\n  const countryHandler = (newCountry: string) => {\r\n    onClick(newCountry);\r\n    toggleHandler();\r\n  };\r\n  \r\n  return (\r\n    <div className=\"select_container\">\r\n      <input\r\n        className=\"select\"\r\n        placeholder={placeHolder}\r\n        defaultValue={value}\r\n        readOnly\r\n        onClick={toggleHandler}\r\n        onBlur={onBlur}\r\n      ></input>\r\n      {toggle ? (\r\n        <div className=\"select_list\">\r\n          {countriesList.map((country, index) => (\r\n            <div\r\n              className=\"select_option\"\r\n              key={index}\r\n              onClick={() => countryHandler(country)}\r\n            >\r\n              {country}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n      <div className={`icon_${iconClass} `} onClick={toggleHandler} tabIndex={1} onBlur={onBlur}></div>\r\n      {(isWrong && isEmpty ) && <Error errorText=\"You must select your country\"/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\n\r\ninterface SexEl {\r\n  name: string;\r\n  onChange: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined,\r\n\r\n}\r\nconst Sex: React.FC<SexEl> = ({  name, onChange }) => {\r\n    return (  \r\n    <div className={`form_sex_${name.toLowerCase()}`}>\r\n        <label>\r\n            <input\r\n                type=\"radio\"\r\n                value={`${name}`}\r\n                name=\"sex\"\r\n                onChange={onChange}\r\n            />\r\n        {name}\r\n        </label>\r\n  </div>)\r\n};\r\n\r\nexport default Sex;\r\n","import React, {  useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\nimport Sex from \"./Sex\";\r\nimport Error from \"./Error\"\r\n\r\n//* Hooks for validating fields\r\nconst useValidation = (value: string , validations: any) => {\r\n  const [isEmpty, setEmpty] = useState(true);\r\n  const [minLengthError, setMinLengthError] = useState(false);\r\n  const [isLatin, setLatin] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n  useEffect(() => {\r\n    for (const validation in validations){\r\n      switch (validation){\r\n        case 'isEmpty': \r\n            if (value) {\r\n              setEmpty(false)\r\n            } else {\r\n              setEmpty(true); \r\n              setErrorText(\"Поле не может быть пустым\");\r\n            }\r\n            break;  \r\n        case 'minLength': \r\n            if (value.length < validations[validation]){\r\n              setMinLengthError(true);\r\n              setErrorText(\"Password must contain at least 6 symbols\");\r\n            } else {\r\n              setMinLengthError(false);  \r\n            }\r\n            break;\r\n        case 'isLatin': \r\n              const regExpLatin = /^[a-zA-Z]+$/;\r\n              if (regExpLatin.test(value)){\r\n              setLatin(true)\r\n            } else {\r\n              setLatin(false); \r\n              setErrorText(\"Please enter a valid name\");\r\n            }\r\n            break;\r\n        case 'isEmail': \r\n            const regExpMail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            if (regExpMail.test(String(value).toLowerCase())){\r\n              setEmailError(false);\r\n            } else {\r\n              setEmailError(true);\r\n              setErrorText(\"Please enter a valid email address\");\r\n            }\r\n        break;\r\n\r\n      }\r\n    }\r\n  }, [validations, value]);\r\n  return {\r\n    errorText,\r\n    isEmpty,\r\n    minLengthError,\r\n    isLatin,\r\n    emailError\r\n  }\r\n}\r\n\r\n//* Input Hook\r\nconst useInput = (initialValue: (string ) , validations: any) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [isWrong, setWrong] = useState(false);\r\n  const valid = useValidation(value, validations)\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value)\r\n  }\r\n  const onBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setWrong(true)\r\n  }\r\n  const onClick = (newCountry: string) => {\r\n    setValue(newCountry)\r\n  }\r\n  const wrongHandler = () => {\r\n    setWrong(true);\r\n  }\r\n  return {\r\n    value,\r\n    setValue, \r\n    onChange,\r\n    onBlur,\r\n    onClick,\r\n    isWrong,\r\n    wrongHandler,\r\n    ...valid\r\n  }\r\n}\r\nconst Form = () => {\r\n  const [buttonStatus, setButtonStatus] = useState(true);\r\n  //! States\r\n  const name = useInput(\"\", {\"isEmpty\": true, \"isLatin\" : false});\r\n  const email = useInput(\"\", {\"isEmpty\": true, \"isEmail\": false});\r\n  const password = useInput(\"\", {\"isEmpty\": true, \"minLength\": 6});\r\n  const country = useInput(\"\", {\"isEmpty\": true});\r\n  const sex = useInput(\"\" ,{\"isEmpty\": true});\r\n  const [checked, setChecked] = useState(false);\r\n  const [spinnerStatus, setSpinnerStatus] = useState(false);\r\n  //!\r\n//* Handlers\r\n  const checkboxHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChecked(e.target.checked)\r\n  }\r\n  const spinnerHandler = () => {\r\n    setSpinnerStatus(prev => !prev);\r\n    setTimeout(()=> {\r\n      setSpinnerStatus(false);\r\n    }, 10000)\r\n  }\r\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    spinnerHandler()\r\n  }\r\n//* Handlers end\r\n\r\n//* Effects\r\n  useEffect(() => {\r\n    const buttonStatusHandler = () => {\r\n      if ((!name.isEmpty && !email.isEmpty && !password.isEmpty && !country.isEmpty && !sex.isEmpty && checked) && \r\n        (name.isLatin && !email.emailError && !password.minLengthError) ) {\r\n          setButtonStatus(false)\r\n        } else {\r\n          setButtonStatus(true)\r\n        }\r\n    }\r\n    buttonStatusHandler()\r\n\r\n  }, [name, email, password, country, sex, checked])\r\n\r\n  useEffect(() => {\r\n    if (checked && sex.isEmpty){\r\n      sex.wrongHandler()\r\n    }\r\n  }, [checked, sex])\r\n//* Effects end\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"form_title\">Create a new account</div>\r\n      <form onSubmit={submitHandler}>\r\n        <Input type=\"name\" name=\"name\" placeHolder=\"Enter your name\" {...name}/>\r\n        <Input type=\"email\" name=\"email\" placeHolder=\"Email\" {...email}/>\r\n        <Input type=\"password\" name=\"password\" placeHolder=\"Password\" {...password}/>\r\n        <Select placeHolder=\"Select your country\" {...country}/>\r\n        <div className=\"form_sex\">\r\n           <Sex name=\"Male\" {...sex}/>\r\n           <Sex name=\"Female\" {...sex}/>\r\n           {(sex.isWrong && sex.isEmpty ) && <Error errorText=\"You must select the gender\"/>}\r\n        </div>\r\n        <Checkbox value={checked} onUpdate={checkboxHandler}/>\r\n        <Button status={buttonStatus} spinnerStatus={spinnerStatus}/>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./components/Form\";\r\nimport \"./css/App.css\";\r\nimport \"./css/Form.css\";\r\nimport \"./css/Input.css\";\r\nimport \"./css/Select.css\";\r\nimport \"./css/Button.css\";\r\nimport \"./css/Error.css\";\r\nimport \"./css/Sex.css\";\r\nimport \"./css/Checkbox.css\"\r\nimport \"./css/Spinner.css\"\r\n\r\n\r\nfunction App() {\r\n  return <div>\r\n    <Form/>\r\n  </div>;\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}